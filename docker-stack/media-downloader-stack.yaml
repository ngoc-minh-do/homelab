services:
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    networks:
      - reverse-proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Tokyo
    volumes:
      - /docker/prowlarr/config:/config
    # ports:
    #   - 9696:9696
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == docker-01]
      restart_policy:
        condition: on-failure

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    networks:
      - reverse-proxy
    environment:
      - TZ=Asia/Tokyo
    # ports:
    #   - 8191:8191
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == docker-01]
      restart_policy:
        condition: on-failure

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    networks:
      - reverse-proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Tokyo
    volumes:
      - /docker/radarr/config:/config
      - $MEDIA_DIR/movies:/movies
      - $MEDIA_DIR/downloads:/downloads
    # ports:
    #   - 7878:7878
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == docker-01]
      restart_policy:
        condition: on-failure

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    networks:
      - reverse-proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Tokyo
    volumes:
      - /docker/sonarr/config:/config
      - $MEDIA_DIR/tv-shows:/tv
      - $MEDIA_DIR/downloads:/downloads
    # ports:
    #   - 8989:8989
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == docker-01]
      restart_policy:
        condition: on-failure

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    networks:
      - reverse-proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Tokyo
    volumes:
      - /docker/bazarr/config:/config
      - $MEDIA_DIR/movies:/movies
      - $MEDIA_DIR/tv-shows:/tv
    # ports:
    #   - 6767:6767
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == docker-01]
      restart_policy:
        condition: on-failure

  # nordlynx:
  #   image: ghcr.io/bubuntux/nordlynx:latest
  #   networks:
  #     - reverse-proxy
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     - TZ=Asia/Tokyo
  #     - PRIVATE_KEY=$NORDVPN_PRIVATE_KEY
  #     - COUNTRY_CODE=JP
  #     - NET_LOCAL=192.168.0.0/24
  #   # ports:
  #   #   - 8090:8090 # qbittorrent
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints: [node.hostname == docker-01]
  #     restart_policy:
  #       condition: on-failure

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    networks:
      - reverse-proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Tokyo
      - WEBUI_PORT=8090
      - TORRENTING_PORT=6881
    volumes:
      - /docker/qbittorrent/config:/config
      - $MEDIA_DIR/downloads:/downloads
    # ports:
    #   - 8090:8090
    #   - 6881:6881
    #   - 6881:6881/udp
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == docker-01]
      restart_policy:
        condition: on-failure
    # network_mode: service:nordlynx
    # depends_on:
    #   - nordlynx

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    networks:
      - reverse-proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Tokyo
    volumes:
      - /docker/sabnzbd/config:/config
      - $MEDIA_DIR/downloads:/downloads
    # ports:
    #   - 8091:8080
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == docker-01]
      restart_policy:
        condition: on-failure

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    networks:
      - reverse-proxy
    environment:
      - LOG_LEVEL=debug
      - TZ=Asia/Tokyo
    # ports:
    #   - 5055:5055
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == docker-01]
      restart_policy:
        condition: on-failure
    volumes:
      - /docker/jellyseerr/config:/app/config

networks:
  reverse-proxy:
    external: true